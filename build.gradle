plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'StarWarsLib'
version = '1.0'

repositories {
    mavenCentral()
}

sourceCompatibility = 21
targetCompatibility = 21

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Установка главного класса приложения
application {
    mainClass = "StarWarsLib.StarWarsApp"
}

// Настройка Java Toolchain
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

dependencies {
    // Другие зависимости
    implementation('org.apache.logging.log4j:log4j-api:2.17.1')
    implementation('org.apache.logging.log4j:log4j-core:2.17.1')
    implementation('org.bouncycastle:bcprov-jdk15on:1.70')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.13.4.2')
    implementation('com.fasterxml.jackson.core:jackson-core:2.13.0') // Добавлена зависимость jackson-core
    implementation('com.fasterxml.jackson.core:jackson-annotations:2.13.0') // Добавлена зависимость jackson-annotations
    implementation('io.rest-assured:rest-assured:5.4.0')
}

// Конфигурация Javadoc
tasks.javadoc {
    source = sourceSets.main.allJava
    classpath += project.files(configurations.runtimeClasspath)
    destinationDir = file("$buildDir/docs/javadoc")
}

// Конфигурация JAR
jar {
    manifest {
        attributes "Main-Class": "StarWarsLib.StarWarsApp"
    }
}

// Конфигурация ShadowJar для создания исполняемого JAR
shadowJar {
    archiveBaseName.set('API') // Имя выходного JAR файла
    archiveVersion.set(project.version) // Версия проекта
    archiveClassifier.set('') // Не добавляем суффикс
    manifest {
        attributes(
                'Main-Class': 'StarWarsLib.StarWarsApp' // Укажите основной класс вашего приложения
        )
    }
}

// Зависимость на создание shadowJar от сборки
tasks.build {
    dependsOn shadowJar
}
